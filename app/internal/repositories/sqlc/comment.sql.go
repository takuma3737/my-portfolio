// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: comment.sql

package sqlc

import (
	"context"
)

const getUserByIdentifierHash = `-- name: GetUserByIdentifierHash :one
WITH ins AS (
  INSERT INTO users (identifier_hash) VALUES ($1)
  ON CONFLICT (identifier_hash) DO NOTHING
  RETURNING id
)

SELECT id FROM ins
UNION ALL
SELECT u.id FROM users u
WHERE u.identifier_hash = $1
  AND NOT EXISTS (SELECT 1 FROM ins)
LIMIT 1
`

func (q *Queries) GetUserByIdentifierHash(ctx context.Context, identifierHash string) (int64, error) {
	row := q.db.QueryRow(ctx, getUserByIdentifierHash, identifierHash)
	var id int64
	err := row.Scan(&id)
	return id, err
}
