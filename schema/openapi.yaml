openapi: 3.0.3
info:
  title: Article Engagement API
  description: API for article comments and likes functionality
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Development server
  - url: https://izumin-tech.jp
    description: Production server

paths:
  /articles/{slug}/comments:
    get:
      operationId: getComments
      summary: 記事のコメント一覧を取得
      description: 指定された記事のすべてのコメントを取得。署名付きCookieがある場合はeditableフラグを適切に付与（未所持時はfalse）。
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
          description: 記事のスラッグ識別子
      responses:
        "200":
          description: コメントが正常に取得されました
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Comment"
        "500":
          description: サーバー内部エラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    post:
      operationId: createComment
      summary: 新しいコメントを投稿
      description: 記事に新しいコメントを作成
      security:
        - CookieAuth: []
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
          description: 記事のスラッグ識別子
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommentRequest"
      responses:
        "201":
          description: コメントが正常に作成されました
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
        "400":
          description: 無効なリクエストデータ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: 認証エラー - セッションCookieが無効または不足
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: サーバー内部エラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /comments/{id}:
    put:
      operationId: updateComment
      summary: コメントを更新
      description: 既存のコメントを更新（投稿者のみ可能）
      security:
        - CookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: コメントID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommentUpdateRequest"
      responses:
        "200":
          description: コメントが正常に更新されました
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
        "400":
          description: 無効なリクエストデータ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: 認証エラー - セッションCookieが無効または不足
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: 権限エラー - コメント投稿者ではありません
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: コメントが見つかりません
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: サーバー内部エラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    delete:
      operationId: deleteComment
      summary: コメントを削除
      description: 既存のコメントを削除（投稿者のみ可能）
      security:
        - CookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: コメントID
      responses:
        "204":
          description: コメントが正常に削除されました
        "401":
          description: 認証エラー - セッションCookieが無効または不足
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: 権限エラー - コメント投稿者ではありません
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: コメントが見つかりません
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: サーバー内部エラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /articles/{slug}/likes:
    get:
      operationId: getLikes
      summary: 記事のいいね数とユーザー状態を取得
      description: 記事の総いいね数と現在のユーザーがいいねしているかどうかを取得。署名付きCookieがある場合はuserLikedを判定（未所持時はfalse）。
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
          description: 記事のスラッグ識別子
      responses:
        "200":
          description: いいね情報が正常に取得されました
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LikeResponse"
        "500":
          description: サーバー内部エラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /articles/{slug}/likes/toggle:
    post:
      operationId: toggleLike
      summary: 記事のいいね状態をトグル
      description: 記事のいいねを追加または削除（Upsert操作）
      security:
        - CookieAuth: []
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
          description: 記事のスラッグ識別子
      responses:
        "200":
          description: いいね状態が正常に切り替えられました
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LikeResponse"
        "401":
          description: 認証エラー - セッションCookieが無効または不足
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: サーバー内部エラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /admin/comments:
    get:
      operationId: getAllComments
      summary: 全コメントを取得（管理者のみ）
      description: モデレーション用にすべての記事のコメントを取得
      security:
        - CookieAuth: []
      responses:
        "200":
          description: 全コメントが正常に取得されました
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Comment"
        "401":
          description: 認証エラー - セッションCookieが無効または不足
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: 権限エラー - 管理者アクセスが必要です
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: サーバー内部エラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /admin/comments/{id}:
    delete:
      operationId: adminDeleteComment
      summary: 任意のコメントを削除（管理者のみ）
      description: モデレーション目的で任意のコメントを削除
      security:
        - CookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: コメントID
      responses:
        "204":
          description: コメントが正常に削除されました
        "401":
          description: 認証エラー - セッションCookieが無効または不足
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: 権限エラー - 管理者アクセスが必要です
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: コメントが見つかりません
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: サーバー内部エラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /articles:
    get:
      operationId: listArticles
      summary: 記事一覧を取得
      description: 公開済みの記事メタ情報を取得します。
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
          description: 取得件数の上限
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
          description: 取得オフセット
      responses:
        "200":
          description: 記事一覧が正常に取得されました
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ArticleSummary"
        "500":
          description: サーバー内部エラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /articles/{slug}:
    get:
      operationId: getArticle
      summary: 記事メタ情報を取得
      description: 指定されたスラッグに一致する記事のメタ情報を返します。
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
          description: 記事のスラッグ識別子
      responses:
        "200":
          description: 記事が正常に取得されました
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Article"
        "404":
          description: 記事が見つかりません
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: サーバー内部エラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  securitySchemes:
    CookieAuth:
      type: apiKey
      in: cookie
      name: user-session

  schemas:
    Comment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        article-slug:
          type: string
        author-name:
          type: string
        content:
          type: string
        user-identifier:
          type: string
        editable:
          type: boolean
          description: 現在ユーザーが編集可能か（未ログイン時は false または未設定）
      required:
        - id
        - article-slug
        - author-name
        - content
        - user-identifier
        - editable

    CommentRequest:
      type: object
      properties:
        author-name:
          type: string
          default: "匿名"
        content:
          type: string
      required:
        - content

    CommentUpdateRequest:
      type: object
      properties:
        content:
          type: string
      required:
        - content

    LikeResponse:
      type: object
      properties:
        count:
          type: integer
        userLiked:
          type: boolean
      required:
        - count
        - userLiked

    ErrorResponse:
      type: object
      properties:
        error:
          type: boolean
        message:
          type: string
        code:
          type: string
      required:
        - error
        - message

    ArticleSummary:
      type: object
      properties:
        slug:
          type: string
        title:
          type: string
        published-at:
          type: string
          format: date-time
      required:
        - slug
        - title
        - published-at

    Article:
      type: object
      properties:
        slug:
          type: string
        title:
          type: string
        published-at:
          type: string
          format: date-time
        updated-at:
          type: string
          format: date-time
      required:
        - slug
        - title
        - published-at
